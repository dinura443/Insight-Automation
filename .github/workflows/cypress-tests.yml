on:
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        options:
          - dashboard
          - charts
          - datasets
        description: "Chooose what to import: dashboard, charts or datasets"
        required: true

      item_names:
        type: string
        description: "Enter chart/dashboard/dataset name(s) â€” use comma to separate multiple items"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Unset variable
        run: npm run unset

      - name: Set env variables from input
        run: |
          echo "MODE=${{ github.event.inputs.mode }}" >> $GITHUB_ENV
          
          # Save item names directly
          echo "ITEM_NAMES=${{ github.event.inputs.item_names }}" >> $GITHUB_ENV

          # Log what weâ€™re doing
          echo " Running in '$MODE' mode"
          echo " Items to import: ${ITEM_NAMES}"

      - name: Create SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > AccumeticKey.pem
          chmod 600 AccumeticKey.pem
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run Relevant Cypress Tests
        run: |
          MODE="${{ env.MODE }}"
          ITEM_NAMES="${{ env.ITEM_NAMES }}"

          IFS=',' read -r -a ITEM_ARRAY <<< "$ITEM_NAMES"
          echo "ðŸ“‹ You are importing: ${ITEM_ARRAY[@]}"

          if [ "$MODE" == "dashboard" ]; then
            npx cypress run --spec "cypress/e2e/dashboard-Import-Operations.cy.js"


          elif [ "$MODE" == "charts" ]; then
            npx cypress run --spec "cypress/e2e/chart-Import-Operations.cy.js"
            npx cypress run --spec "cypress/e2e/chart-Verification-Operation.cy.js"

          elif [ "$MODE" == "datasets" ]; then
            npx cypress run --spec "cypress/e2e/dataset-Import-Operations.cy.js"
            npx cypress run --spec "cypress/e2e/dataset-Verification-Operation.cy.js"

          else
            echo " Unknown mode: $MODE"
            exit 1
          fi

      - name: Get backup filename
        id: get_name
        run: |
          BACKUP_NAME=$(ls cypress/fixtures/backups/pre-import | grep .zip | sort | tail -n 1)
          if [ -z "$BACKUP_NAME" ]; then
            echo "No backup file found in directory."
            exit 1
          fi
          echo "Latest backup: $BACKUP_NAME"
          echo "BACKUP_NAME=$BACKUP_NAME" >> $GITHUB_ENV
      - name: Upload dashboard backup to server
        run: |
          echo " Uploading ${{ env.BACKUP_NAME }} to server..."
          scp -o StrictHostKeyChecking=no -i AccumeticKey.pem \
            cypress/fixtures/backups/pre-import/${{ env.BACKUP_NAME }} \
            AccumeticUser@34.71.130.138:/home/AccumeticUser/cypress-backups/backups
      - name: Remove files older than 24 hours on server
        run: |
          ssh -o StrictHostKeyChecking=no -i AccumeticKey.pem \
            AccumeticUser@34.71.130.138 \
            'find /home/AccumeticUser/cypress-backups/backups -type f -mmin +1440 -exec rm -f {} \;'