name: Superset Import Automation

on:
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        options:
          - dashboard
          - charts
          - datasets
        description: "Choose what to import: dashboard, charts, or datasets"
        required: true

      item_names:
        type: string
        description: "Enter item names (comma-separated if multiple)"
        required: true

jobs:
  import:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Unset Cypress environment variables
        run: npm run unset

      - name: Set environment variables from inputs
        run: |
          echo "MODE=${{ github.event.inputs.mode }}" >> $GITHUB_ENV
          echo "ITEM_NAMES=${{ github.event.inputs.item_names }}" >> $GITHUB_ENV
          echo "Selected mode: $MODE"
          echo "Items to process: $ITEM_NAMES"

      - name: Create SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > AccumeticKey.pem
          chmod 600 AccumeticKey.pem
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run initSessions (required for all modes)
        run: npx cypress run --spec "cypress/e2e/initSessions.cy.js"

      - name: Run Cypress tests based on mode
        run: |
          echo "Running Cypress tests for mode: $MODE"
          if [ "$MODE" == "dashboard" ]; then
            npx cypress run --spec "cypress/e2e/dashboard-import.cy.js"

          elif [ "$MODE" == "charts" ]; then
            npx cypress run --spec "cypress/e2e/chart-import.cy.js"
            npx cypress run --spec "cypress/e2e/charts-verification.cy.js"

          elif [ "$MODE" == "datasets" ]; then
            npx cypress run --spec "cypress/e2e/dataset-import.cy.js"
            npx cypress run --spec "cypress/e2e/dataset-verification.cy.js"

          else
            echo "Unknown mode: $MODE"
            exit 1
          fi

      - name: Get latest backup file name
        id: get_backup
        run: |
          BACKUP_NAME=$(ls cypress/fixtures/backups/pre-import | grep .zip | sort | tail -n 1)
          if [ -z "$BACKUP_NAME" ]; then
            echo "No backup file found."
            exit 1
          fi
          echo "BACKUP_NAME=$BACKUP_NAME" >> $GITHUB_ENV

      - name: Upload backup file to remote server
        run: |
          echo "Uploading backup: ${{ env.BACKUP_NAME }}"
          scp -o StrictHostKeyChecking=no -i AccumeticKey.pem \
            "cypress/fixtures/backups/pre-import/${{ env.BACKUP_NAME }}" \
            AccumeticUser@34.71.130.138:/home/AccumeticUser/cypress-backups/backups

      - name: Clean up old backups on server
        run: |
          ssh -o StrictHostKeyChecking=no -i AccumeticKey.pem \
            AccumeticUser@34.71.130.138 \
            'find /home/AccumeticUser/cypress-backups/backups -type f -mmin +1440 -exec rm -f {} \;'
