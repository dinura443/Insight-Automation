name: Cypress Tests

on:
  # Trigger the workflow on push or pull request to the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    env:
      # Non-sensitive variables defined directly in the workflow
      USERNAME: my-username # Replace with your actual username
      PASSWORD: my-password # Replace with your actual password
      DOWNLOAD_DIR: ./downloads
      BACKUP_DIR: ./backups
      FIXTURES_DIR: ./cypress/fixtures
      DASHBOARD_INSTANCE1: ./instance1
      DASHBOARD_INSTANCE2: ./instance2
      INSTANCE1_LOGIN: http://localhost:3000/login
      INSTANCE2_LOGIN: http://localhost:4000/login
      DASHBOARD_NAME: my-dashboard
      ROOT_DIR: .

    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Use the Node.js version compatible with your project

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Cache Cypress binary to speed up installation
      - name: Cache Cypress Binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-v${{ hashFiles('**/package-lock.json') }}

      # Step 5: Run Cypress tests
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v5
        with:
          browser: chrome # Specify the browser to run tests in
          record: false # Set to true if you want to record test results with Cypress Dashboard
          start: npm run start # Command to start your application (if needed)
          wait-on: http://localhost:3000 # Wait for your app to be ready (adjust URL as needed)

      # Step 6: Upload test artifacts (optional)
      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshots-and-videos
          path: |
            cypress/screenshots
            cypress/videos

      # Step 7: Generate a test report (optional)
      - name: Generate Test Report
        if: always()
        run: npm run generate-report # Adjust this command based on your reporting setup

      # Step 8: Clean up directories after tests
      - name: Clear Directories
        run: |
          echo "Clearing download directory..."
          rm -rf ${{ env.DOWNLOAD_DIR }}/*
          echo "Clearing fixtures directory..."
          rm -rf ${{ env.FIXTURES_DIR }}/*
          echo "Clearing instance1 dashboard directory..."
          rm -rf ${{ env.DASHBOARD_INSTANCE1 }}/*
          echo "Clearing instance2 dashboard directory..."
          rm -rf ${{ env.DASHBOARD_INSTANCE2 }}/*

      # Step 9: Log completion
      - name: Log Workflow Completion
        run: echo "Cypress tests completed successfully."